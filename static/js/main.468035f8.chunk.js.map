{"version":3,"sources":["core/ProfileContext.tsx","resume/profile/Profile.tsx","shared/components/tile/Tile.tsx","shared/utils/getMonthName.ts","resume/education/Education.tsx","resume/experience/Experience.tsx","resume/Resume.tsx","firebase/firebase.ts","firebase/context.tsx","core/ProfileService.ts","loading/Loader.tsx","footer/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx","logo.svg"],"names":["ProfileContext","React","createContext","Profile","profile","console","log","className","src","logo","alt","name","career","contact","phone","href","email","Tile","title","children","classes","monthNames","EducationItem","education","endDate","toDate","month","getMonth","year","getFullYear","degree","school","Education","useState","showMore","setShowMore","latestEducation","formerEducation","length","onClick","map","index","key","Experience","recentExperience","experience","company","Resume","Consumer","about","source","techStack","replace","escapeHtml","softSkills","articles","article","text","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","db","app","initializeApp","this","firestore","FirebaseContext","loadChildRefs","snapshot","childRefs$","snap","get","forkJoin","pipe","child","data","ProfileService","firebase","profileRef","collection","doc","from","first","tap","defaultText","Loader","Footer","App","profileService","state","loading","loadingStatus","randomWaitTime","Math","ceil","random","context","profile$","take","delay","switchMap","setState","subscribe","content","Provider","value","Component","contextType","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.468035f8.chunk.js","sourcesContent":["import React from 'react';\n\nexport const ProfileContext = React.createContext(null);\n","import React from 'react';\nimport { ProfileProps } from '../../core/ProfileModel';\nimport logo from '../../logo.svg';\nimport './Profile.scss';\n\nexport function Profile({ profile }: ProfileProps) {\n  console.log(profile);\n  return (\n    <article className=\"profile media\">\n      <figure className=\"media-left\">\n        <p className=\"image is-128x128\">\n          <img src={logo} alt=\"logo\" />\n        </p>\n      </figure>\n      <div className=\"media-content\">\n        <div className=\"content\">\n          <h1 className=\"title\">\n            <strong>{profile.name}</strong>\n          </h1>\n          <h2 className=\"subtitle\">{profile.career}</h2>\n        </div>\n        <div className=\"content is-small\">\n          <p>\n            <small>{profile.contact.phone}</small>\n          </p>\n          <p>\n            <small>\n              <a href=\"mailto:someone@yoursite.com\">{profile.contact.email}</a>\n            </small>\n          </p>\n        </div>\n      </div>\n    </article>\n  );\n}\n","import React from 'react';\nimport './Tile.scss';\nexport function Tile({ title = null, className = '', children }) {\n  const classes = className ? `tile ${className}` : 'tile';\n  return (\n    <div className={classes}>\n      {title ? <p className=\"title\">{title}</p> : ''}\n      {children}\n    </div>\n  );\n}\n","const monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport function getMonth(month: number) {\n  return month >= 0 && month <= 11 ? monthNames[month] : '';\n}\n","import React, { useState } from 'react';\n\nimport { ProfileProps, Education as EducationModel } from '../../core/ProfileModel';\nimport { getMonth } from '../../shared/utils/getMonthName';\n\nimport './Education.scss';\n\nfunction EducationItem({ education }: { education: EducationModel }) {\n  const endDate = education.endDate.toDate();\n  const month = getMonth(endDate.getMonth());\n  const year = endDate.getFullYear();\n  return (\n    <div className=\"education\">\n      <p>\n        <strong>{education.degree}</strong>\n      </p>\n      <p>{education.school}</p>\n      <p>\n        {month}, {year}\n      </p>\n    </div>\n  );\n}\n\nexport function Education({ profile }: ProfileProps) {\n  const [showMore, setShowMore] = useState(false);\n\n  const [latestEducation, ...formerEducation] = profile.education;\n  return (\n    <div className=\"content\">\n      <EducationItem education={latestEducation} />\n\n      {formerEducation && formerEducation.length ? (\n        <div className=\"content\">\n          <p>\n            <small>\n              <a onClick={() => setShowMore(!showMore)}>{showMore ? 'Show less...' : 'Show more...'}</a>\n            </small>\n          </p>\n          {showMore\n            ? formerEducation.map((education, index) => <EducationItem key={index} education={education} />)\n            : ''}\n        </div>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { ProfileProps } from '../../core/ProfileModel';\nexport function Experience({ profile }: ProfileProps) {\n  const [recentExperience] = profile.experience;\n  return <div className=\"experience\">{recentExperience.company}</div>;\n}\n","import React from 'react';\nimport { ProfileContext } from '../core/ProfileContext';\nimport { Profile } from './profile/Profile';\nimport { ProfileModel } from '../core/ProfileModel';\nimport { Tile } from '../shared/components';\nimport { Education } from './education/Education';\nimport { Experience } from './experience/Experience';\n\nimport ReactMarkdown from 'react-markdown';\n\nconst input = `\n# Live demo\n\nChanges are automatically rendered as you type.\n\n## Table of Contents\n\n* Implements [GitHub Flavored Markdown](https://github.github.com/gfm/)\n* Renders actual, \"native\" React DOM elements\n* Allows you to escape or skip HTML (try toggling the checkboxes above)\n* If you escape or skip the HTML, no \\`dangerouslySetInnerHTML\\` is used! Yay!\n\n## HTML block below\n\n<blockquote>\n  This blockquote will change based on the HTML settings above.\n</blockquote>\n\n## How about some code?\n\\`\\`\\`js\nvar React = require('react');\nvar Markdown = require('react-markdown');\n\nReact.render(\n  <Markdown source=\"# Your markdown here\" />,\n  document.getElementById('content')\n);\n\\`\\`\\`\n\nPretty neat, eh?\n\n## Tables?\n\n| Feature   | Support |\n| --------- | ------- |\n| tables    | ✔ |\n| alignment | ✔ |\n| wewt      | ✔ |\n\n## More info?\n\nRead usage information and more on [GitHub](//github.com/rexxars/react-markdown)\n\n---------------\n\nA component by [Espen Hovlandsdal](https://espen.codes/)\n`;\n\nexport function Resume() {\n  return (\n    <ProfileContext.Consumer>\n      {(profile: ProfileModel) => {\n        return (\n          <div>\n            <section className=\"section\">\n              <Profile profile={profile}></Profile>\n            </section>\n            <section className=\"section no-padding-top\">\n              <div className=\"columns\">\n                <div className=\"column\">\n                  <Tile className=\"is-parent\">\n                    <Tile title=\"About\" className=\"is-child\">\n                      <div>{profile.about}</div>\n                    </Tile>\n                  </Tile>\n                  <Tile className=\"is-parent\">\n                    <Tile title=\"languages & technologies\" className=\"is-child\">\n                      <div className=\"markdown\">\n                        <ReactMarkdown source={profile.techStack.replace(/\\\\n/gi, '\\n')} escapeHtml={false} />\n                      </div>\n                    </Tile>\n                  </Tile>\n                  <Tile className=\"is-parent\">\n                    <Tile title=\"Other skills\" className=\"is-child\">\n                      <div className=\"markdown\">\n                        <div className=\"markdown\">\n                          <ReactMarkdown source={profile.softSkills.replace(/\\\\n/gi, '\\n')} escapeHtml={false} />\n                        </div>\n                      </div>\n                    </Tile>\n                  </Tile>\n                </div>\n                <div className=\"column\">\n                  <Tile className=\"is-parent\">\n                    <Tile title=\"Education\" className=\"is-child\">\n                      <Education profile={profile} />\n                    </Tile>\n                  </Tile>\n                  <Tile className=\"is-parent\">\n                    <Tile title=\"current work\" className=\"is-child\">\n                      <Experience profile={profile} />\n                    </Tile>\n                  </Tile>\n                  <Tile className=\"is-parent\">\n                    <Tile title=\"Articles & portfolio\" className=\"is-child markdown\">\n                      <ul>\n                        {profile.articles.map((article, index) => {\n                          return (\n                            <li>\n                              <a key={index} href={article.source}>\n                                {article.text}\n                              </a>\n                            </li>\n                          );\n                        })}\n                      </ul>\n                    </Tile>\n                  </Tile>\n                </div>\n              </div>\n              <div className=\"columns\">\n                <div className=\"column\">\n                  <Tile className=\"is-parent\">\n                    <Tile title=\"Additional experience\" className=\"is-child\">\n                      <div className=\"markdown\">\n                        <ReactMarkdown source={'#holo'} escapeHtml={false} />\n                      </div>\n                    </Tile>\n                  </Tile>\n                </div>\n              </div>\n            </section>\n          </div>\n        );\n      }}\n    </ProfileContext.Consumer>\n  );\n}\n","import app from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nexport class Firebase {\n  private db: firebase.firestore.Firestore;\n\n  constructor() {\n    app.initializeApp(firebaseConfig);\n    this.db = app.firestore();\n  }\n\n  public get firestore() {\n    return this.db;\n  }\n}\n","import React from 'react';\nimport { Firebase } from './firebase';\n\nconst FirebaseContext = React.createContext<Firebase>(new Firebase());\n\nexport default FirebaseContext;\n","import Firebase from '../firebase';\nimport { from, forkJoin, Observable } from 'rxjs';\nimport { tap, map, first } from 'rxjs/operators';\nimport { DataObject } from '../shared/model/DataObject';\n\nexport const loadChildRefs = (snapshot: DataObject, key: string) => {\n  const childRefs$: Array<firebase.firestore.DocumentReference> = snapshot[key].map(snap => snap.get());\n  return forkJoin(childRefs$).pipe(\n    map((children: Array<firebase.firestore.DocumentSnapshot>) => ({\n      ...snapshot,\n      [key]: children.map(child => child.data()),\n    }))\n  );\n};\n\nexport class ProfileService {\n  constructor(private firebase: Firebase) {}\n\n  get profile$() {\n    const profileRef = this.firebase.firestore.collection('profile').doc('emsedano');\n    return from(profileRef.get()).pipe(\n      first(),\n      map(snapshot => snapshot.data()),\n      // switchMap(profile => {\n      //   debugger;\n      //   return of(profile)\n      // }),\n      tap(console.log)\n    );\n  }\n}\n","import React from 'react';\nimport logo from '../logo.svg';\nimport './Loader.scss';\n\nconst defaultText = { text: 'Loading' };\n\nexport function Loader({ text }: { text: string } = defaultText) {\n  return (\n    <div className=\"Loader\">\n      <header className=\"Loader-header\">\n        <img src={logo} className=\"Loader-logo\" alt=\"logo\" />\n        <p>{text}</p>\n      </header>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport function Footer() {\n  return (\n    <footer className=\"footer\">\n      <div className=\"content has-text-centered is-small\">\n        <p>\n          By{' '}\n          <strong>\n            <a href=\"https://jgthms.com\">Elias Martinez</a>{' '}\n          </strong>{' '}\n          using <a href=\"https://es.reactjs.org/\">React</a>, <a href=\"https://firebase.google.com\">Firebase</a> {' & '}\n          <a href=\"https://bulma.io/\">Bulma</a>. All rights reserved May, 2020.\n        </p>\n      </div>\n    </footer>\n  );\n}\n","import React from 'react';\nimport { Resume } from './resume/Resume';\nimport { FirebaseContext } from './firebase';\nimport { ProfileService, loadChildRefs } from './core/ProfileService';\nimport { take, delay, switchMap } from 'rxjs/operators';\nimport { Loader } from './loading/Loader';\nimport { ProfileContext } from './core/ProfileContext';\nimport { Footer } from './footer/Footer';\n\nexport class App extends React.Component {\n  static contextType = FirebaseContext;\n  private profileService: ProfileService;\n\n  state = {\n    loading: true,\n    loadingStatus: 'Loading profile',\n    profile: {},\n  };\n\n  componentDidMount() {\n    // to give experience of loading only\n    const randomWaitTime = () => Math.ceil(Math.random() * 900);\n\n    this.profileService = new ProfileService(this.context);\n    this.profileService.profile$\n      .pipe(take(1))\n      .pipe(\n        delay(randomWaitTime()),\n        switchMap(profile => {\n          this.setState(state => ({ ...state, loadingStatus: 'Fetching Experience' }));\n          return loadChildRefs(profile, 'experience');\n        }),\n        delay(randomWaitTime()),\n        switchMap(profile => {\n          this.setState(state => ({ ...state, loadingStatus: 'Fetching Articles' }));\n          return loadChildRefs(profile, 'articles');\n        }),\n        delay(randomWaitTime()),\n        switchMap(profile => {\n          this.setState(state => ({ ...state, loadingStatus: 'Fetching Education' }));\n          return loadChildRefs(profile, 'education');\n        }),\n        delay(randomWaitTime())\n      )\n      .subscribe(profile => this.setState({ loading: false, profile }));\n  }\n\n  render() {\n    const { profile, loading, loadingStatus } = this.state;\n\n    const content = loading ? (\n      <Loader text={loadingStatus} />\n    ) : (\n      <ProfileContext.Provider value={profile}>\n        <Resume />\n      </ProfileContext.Provider>\n    );\n\n    return (\n      <div>\n        <div className=\"container\">{content}</div>\n        <Footer />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.59e410d6.svg\";"],"sourceRoot":""}