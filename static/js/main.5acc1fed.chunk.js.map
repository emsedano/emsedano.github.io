{"version":3,"sources":["core/ProfileContext.tsx","resume/profile/Profile.tsx","shared/components/tile/Tile.tsx","shared/utils/dateUtils.ts","resume/education/Education.tsx","shared/components/button-link/ButtonLink.tsx","shared/components/markdown-content/markdown-content.tsx","resume/experience/Experience.tsx","resume/Resume.tsx","firebase/firebase.ts","firebase/context.tsx","core/ProfileService.ts","shared/utils/randomWaitTime.ts","loading/Loader.tsx","footer/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx","logo.svg"],"names":["ProfileContext","React","createContext","Profile","profile","className","src","logo","alt","name","career","contact","phone","href","email","Tile","title","children","classes","monthYear","date","moment","format","dateRanges","joinToken","dates","filter","Boolean","map","join","EducationType","ButtonLink","onClick","role","isCollege","type","college","isCert","cert","EducationItem","education","degree","startDate","toDate","endDate","school","Education","useState","showMore","setShowMore","console","log","latestEducation","formerEducation","certs","formerCollegeAndCerts","length","index","key","MarkdownContent","content","source","replace","escapeHtml","Experience","experience","css","company","position","pride","RecentExperience","recentExperience","AdditionalExperience","additionalExperience","shift","Resume","Consumer","about","techStack","softSkills","articles","article","target","rel","text","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","db","app","initializeApp","this","firestore","FirebaseContext","randomWaitTime","maxTime","Math","ceil","random","randomWaitTimeFactory","fromSnapToData","snapshot","data","fromSnapsToData","snapshots","docs","doc","ProfileService","firebase","collection","queryRef","from","get","pipe","take","shareReplay","Observable","subscriber","profile$","delay","concatMap","next","loading","loadingStatus","experience$","education$","articles$","catchError","of","subscribe","complete","profileRef","experienceRefs$","collection$","orderBy","getCollection","educationRefs$","articlesRefs$","defaultText","Loader","Footer","App","profileService","state","context","fetchProfile","takeWhile","setState","Provider","value","Component","contextType","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.5acc1fed.chunk.js","sourcesContent":["import React from 'react';\n\nexport const ProfileContext = React.createContext(null);\n","import React from 'react';\nimport { ProfileProps } from '../../core/ProfileModel';\nimport logo from '../../logo.svg';\nimport './Profile.scss';\n\nexport function Profile({ profile }: ProfileProps) {\n  return (\n    <section className=\"section profile\">\n      <article className=\"media\">\n        <figure className=\"media-left\">\n          <p className=\"image is-128x128\">\n            <img src={logo} alt=\"logo\" />\n          </p>\n        </figure>\n        <div className=\"media-content\">\n          <div className=\"content\">\n            <h1 className=\"title\">\n              <strong>{profile.name}</strong>\n            </h1>\n            <h2 className=\"subtitle\">{profile.career}</h2>\n          </div>\n          <div className=\"content is-small\">\n            <p>\n              <small>{profile.contact.phone}</small>\n            </p>\n            <p>\n              <small>\n                <a href=\"mailto:someone@yoursite.com\">{profile.contact.email}</a>\n              </small>\n            </p>\n          </div>\n        </div>\n      </article>\n    </section>\n  );\n}\n","import React from 'react';\nimport './Tile.scss';\nexport function Tile({ title = null, className = '', children }) {\n  const classes = className ? `tile ${className}` : 'tile';\n  return (\n    <div className={classes}>\n      {title ? <p className=\"title\">{title}</p> : ''}\n      {children}\n    </div>\n  );\n}\n","import moment from 'moment';\n\nexport function monthYear(date: Date) {\n  return moment(date).format('MMM, YYYY');\n}\n\nexport function dateRanges(joinToken = '-', ...dates: Date[]) {\n  return dates\n    .filter(Boolean)\n    .map(date => monthYear(date))\n    .join(joinToken);\n}\n","import React, { useState } from 'react';\nimport { ProfileProps, Education as EducationModel } from '../../core/ProfileModel';\nimport { dateRanges } from '../../shared/utils/dateUtils';\nimport { ButtonLink } from '../../shared/components/button-link/ButtonLink';\n\nenum EducationType {\n  college = 'college',\n  cert = 'cert',\n}\n\nconst isCollege = ({ type }: Partial<EducationModel>) => type === EducationType.college;\nconst isCert = ({ type }: Partial<EducationModel>) => type === EducationType.cert;\n\nfunction EducationItem({ education }: { education: EducationModel }) {\n  return (\n    <div className=\"education\">\n      <p className=\"subtitle\">\n        <strong>{education.degree}</strong>{' '}\n        <small className=\"content is-small\">\n          {dateRanges(' - ', education?.startDate?.toDate(), education?.endDate?.toDate())}\n        </small>\n      </p>\n      <p className=\"subtitle\">{education.school}</p>\n    </div>\n  );\n}\n\nexport function Education({ profile }: ProfileProps) {\n  const [showMore, setShowMore] = useState(false);\n  console.log(profile);\n  const [latestEducation, ...formerEducation] = profile.education.filter(isCollege);\n  const certs = profile.education.filter(isCert);\n  const formerCollegeAndCerts = [...formerEducation, ...certs];\n  return (\n    <div className=\"content\">\n      <EducationItem education={latestEducation} />\n\n      {formerCollegeAndCerts?.length ? (\n        <div className=\"content\">\n          <p className=\"no-print\">\n            <small>\n              <ButtonLink onClick={() => setShowMore(!showMore)}>\n                {showMore ? 'Show less...' : 'Show more...'}\n              </ButtonLink>\n            </small>\n          </p>\n          {showMore\n            ? formerCollegeAndCerts.map((education, index) => <EducationItem key={index} education={education} />)\n            : ''}\n        </div>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport './ButtonLink.scss';\n\nexport function ButtonLink({ children, onClick }: { children: any; onClick: () => any }) {\n  return (\n    <span role=\"button\" className=\"ButtonLink\" onClick={onClick}>\n      {children}\n    </span>\n  );\n}\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nexport function MarkdownContent({ content }: { content: string }) {\n  return (\n    <div className=\"markdown\">\n      <ReactMarkdown source={content.replace(/\\\\n/gi, '\\n')} escapeHtml={false} />\n    </div>\n  );\n}\n","import React from 'react';\nimport { ProfileProps, Experience as ExperienceModel } from '../../core/ProfileModel';\nimport { MarkdownContent } from '../../shared/components/markdown-content/markdown-content';\nimport { dateRanges } from '../../shared/utils/dateUtils';\nimport './Experience.scss';\n\nfunction Experience({ experience, className = '' }: { experience: ExperienceModel; className?: string }) {\n  const css = `experience ${className}`;\n  return (\n    <div className={css}>\n      <p className=\"subtitle\">\n        <strong>{experience.company}</strong>{' '}\n        <small className=\"content is-small\">\n          {dateRanges(' - ', experience.startDate.toDate(), experience?.endDate?.toDate())}\n        </small>\n      </p>\n      <p className=\"subtitle\">{experience.position}</p>\n      <MarkdownContent content={experience.pride} />\n    </div>\n  );\n}\n\nexport function RecentExperience({ profile }: ProfileProps) {\n  const [recentExperience] = profile.experience;\n  return <Experience experience={recentExperience} />;\n}\n\nexport function AdditionalExperience({ profile }: ProfileProps) {\n  const additionalExperience = [...profile.experience];\n  additionalExperience.shift();\n  return (\n    <div>\n      {additionalExperience.map((experience, index) => {\n        return <Experience key={index} className=\"additional-experience\" experience={experience} />;\n      })}\n    </div>\n  );\n}\n","import React from 'react';\nimport { ProfileContext } from '../core/ProfileContext';\nimport { Profile } from './profile/Profile';\nimport { ProfileModel } from '../core/ProfileModel';\nimport { Tile } from '../shared/components';\nimport { Education } from './education/Education';\nimport { RecentExperience, AdditionalExperience } from './experience/Experience';\n\nimport ReactMarkdown from 'react-markdown';\nimport { MarkdownContent } from '../shared/components/markdown-content/markdown-content';\n\n// import markdownText from './__mocks__/markdownText';\n\nexport function Resume() {\n  return (\n    <ProfileContext.Consumer>\n      {(profile: ProfileModel) => {\n        return (\n          <div>\n            <Profile profile={profile}></Profile>\n            <section className=\"section no-padding-top\">\n              <div className=\"columns\">\n                <div className=\"column\">\n                  <Tile className=\"is-parent\">\n                    <Tile title=\"About\" className=\"is-child\">\n                      <div>{profile.about}</div>\n                    </Tile>\n                  </Tile>\n                  <Tile className=\"is-parent\">\n                    <Tile title=\"languages & technologies\" className=\"is-child\">\n                      <div className=\"markdown\">\n                        <ReactMarkdown source={profile.techStack.replace(/\\\\n/gi, '\\n')} escapeHtml={false} />\n                      </div>\n                    </Tile>\n                  </Tile>\n                  <Tile className=\"is-parent\">\n                    <Tile title=\"Other skills\" className=\"is-child\">\n                      <MarkdownContent content={profile.softSkills} />\n                    </Tile>\n                  </Tile>\n                </div>\n                <div className=\"column\">\n                  <Tile className=\"is-parent\">\n                    <Tile title=\"Education\" className=\"is-child\">\n                      <Education profile={profile} />\n                    </Tile>\n                  </Tile>\n                  <Tile className=\"is-parent\">\n                    <Tile title=\"current work\" className=\"is-child\">\n                      <RecentExperience profile={profile} />\n                    </Tile>\n                  </Tile>\n                  <Tile className=\"is-parent\">\n                    <Tile title=\"Articles & portfolio\" className=\"is-child markdown\">\n                      <ul>\n                        {profile.articles.map((article, index) => {\n                          return (\n                            <li key={index}>\n                              <a target=\"_blank\" rel=\"noopener noreferrer\" href={article.source}>\n                                {article.text}\n                              </a>\n                            </li>\n                          );\n                        })}\n                      </ul>\n                    </Tile>\n                  </Tile>\n                </div>\n              </div>\n              <div className=\"columns\">\n                <div className=\"column\">\n                  <Tile className=\"is-parent\">\n                    <Tile title=\"Additional experience\" className=\"is-child\">\n                      <AdditionalExperience profile={profile} />\n                    </Tile>\n                  </Tile>\n                </div>\n              </div>\n            </section>\n          </div>\n        );\n      }}\n    </ProfileContext.Consumer>\n  );\n}\n","import app from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nexport class Firebase {\n  private db: firebase.firestore.Firestore;\n\n  constructor() {\n    app.initializeApp(firebaseConfig);\n    this.db = app.firestore();\n  }\n\n  public get firestore() {\n    return this.db;\n  }\n}\n","import React from 'react';\nimport { Firebase } from './firebase';\n\nconst FirebaseContext = React.createContext<Firebase>(new Firebase());\n\nexport default FirebaseContext;\n","import Firebase from '../firebase';\nimport { from, Observable, of } from 'rxjs';\nimport { map, shareReplay, take, concatMap, catchError, delay } from 'rxjs/operators';\nimport { ProfileModel, Education, Experience, Articles } from './ProfileModel';\nimport { randomWaitTimeFactory } from '../shared/utils/randomWaitTime';\nimport { loadChildRefs } from './loadChildRefs';\n\n// random wait time generator\nconst randomWaitTime = randomWaitTimeFactory(900);\n\nconst fromSnapToData = <T>(snapshot: firebase.firestore.DocumentSnapshot<firebase.firestore.DocumentData>) =>\n  snapshot.data() as T;\n\nconst fromSnapsToData = <T>(snapshots: firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>) =>\n  snapshots.docs.map(doc => fromSnapToData<T>(doc));\n\nexport class ProfileService {\n  constructor(private firebase: Firebase) {}\n\n  private collection$(name: string) {\n    return this.firebase.firestore.collection(name);\n  }\n\n  private getCollection(queryRef: firebase.firestore.Query<firebase.firestore.DocumentData>) {\n    return from(queryRef.get()).pipe(take(1), shareReplay());\n  }\n\n  private get profile$(): Observable<ProfileModel> {\n    const profileRef = this.firebase.firestore.collection('profile').doc('emsedano');\n    return from(profileRef.get()).pipe(take(1), map(fromSnapToData), shareReplay()) as Observable<ProfileModel>;\n  }\n\n  private get experience$(): Observable<Experience[]> {\n    const experienceRefs$ = this.collection$('experience').orderBy('startDate', 'desc');\n    return this.getCollection(experienceRefs$).pipe(map(snapshots => fromSnapsToData<Experience>(snapshots)));\n  }\n\n  private get education$(): Observable<Education[]> {\n    const educationRefs$ = this.collection$('education').orderBy('endDate', 'desc');\n    return this.getCollection(educationRefs$).pipe(map(snapshots => fromSnapsToData<Education>(snapshots)));\n  }\n\n  private get articles$(): Observable<Articles[]> {\n    const articlesRefs$ = this.collection$('articles');\n    return this.getCollection(articlesRefs$).pipe(map(snapshots => fromSnapsToData<Articles>(snapshots)));\n  }\n\n  fetchProfile(): Observable<{ loading: boolean; loadingStatus?: string; profile?: ProfileModel }> {\n    return new Observable(subscriber => {\n      this.profile$\n        .pipe(\n          take(1),\n          // fetch experience\n          delay(randomWaitTime()),\n          concatMap(profile => {\n            subscriber.next({ loading: true, loadingStatus: 'Fetching Experience' });\n            return this.experience$.pipe(map(experience => ({ ...profile, experience })));\n          }),\n          // fetch education\n          delay(randomWaitTime()),\n          concatMap(profile => {\n            subscriber.next({ loading: true, loadingStatus: 'Fetching Education' });\n            return this.education$.pipe(map(education => ({ ...profile, education })));\n          }),\n          // fetch articles\n          delay(randomWaitTime()),\n          concatMap(profile => {\n            subscriber.next({ loading: true, loadingStatus: 'Fetching Articles' });\n            return this.articles$.pipe(map(articles => ({ ...profile, articles })));\n          }),\n          delay(randomWaitTime()),\n          // finally return profile\n          map((profile: ProfileModel) => {\n            subscriber.next({ loading: false, profile });\n          }),\n          catchError(() => of({ loading: false, loadingStatus: 'Error' }))\n        )\n        .subscribe(() => subscriber.complete());\n    });\n  }\n}\n","export const randomWaitTimeFactory = (maxTime: number = 1000) => () => Math.ceil(Math.random() * maxTime);\n","import React from 'react';\nimport logo from '../logo.svg';\nimport './Loader.scss';\n\nconst defaultText = { text: 'Loading' };\n\nexport function Loader({ text }: { text: string } = defaultText) {\n  return (\n    <div className=\"Loader\">\n      <header className=\"Loader-header\">\n        <img src={logo} className=\"Loader-logo\" alt=\"logo\" />\n        <p>{text}</p>\n      </header>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport function Footer() {\n  return (\n    <footer className=\"footer no-print\">\n      <div className=\"content has-text-centered is-small\">\n        <p>\n          By{' '}\n          <strong>\n            <a href=\"https://jgthms.com\">Elias Martinez</a>{' '}\n          </strong>{' '}\n          using <a href=\"https://es.reactjs.org/\">React</a>, <a href=\"https://firebase.google.com\">Firebase</a> {' & '}\n          <a href=\"https://bulma.io/\">Bulma</a>.\n        </p>\n        <p>Dallas, TX / all rights reserved, May, 2020</p>\n      </div>\n    </footer>\n  );\n}\n","import React from 'react';\nimport { Resume } from './resume/Resume';\nimport { FirebaseContext } from './firebase';\nimport { ProfileService } from './core/ProfileService';\nimport { takeWhile } from 'rxjs/operators';\nimport { Loader } from './loading/Loader';\nimport { ProfileContext } from './core/ProfileContext';\nimport { Footer } from './footer/Footer';\n\nexport class App extends React.Component {\n  static contextType = FirebaseContext;\n  private profileService: ProfileService;\n\n  state = {\n    loading: true,\n    loadingStatus: 'Loading Profile',\n    profile: {},\n  };\n\n  componentDidMount() {\n    // to give experience of loading only\n    this.profileService = new ProfileService(this.context);\n\n    this.profileService\n      .fetchProfile()\n      .pipe(takeWhile(() => this.state.loading))\n      .subscribe(state => this.setState(state));\n  }\n\n  render() {\n    const { profile, loading, loadingStatus } = this.state;\n\n    const content = loading ? (\n      <Loader text={loadingStatus} />\n    ) : (\n      <ProfileContext.Provider value={profile}>\n        <Resume />\n      </ProfileContext.Provider>\n    );\n\n    return (\n      <div>\n        <div className=\"container\">{content}</div>\n        <Footer />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.59e410d6.svg\";"],"sourceRoot":""}